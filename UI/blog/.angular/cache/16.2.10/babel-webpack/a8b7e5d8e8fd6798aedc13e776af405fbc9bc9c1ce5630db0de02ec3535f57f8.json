{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let EditCategoryComponent = class EditCategoryComponent {\n  constructor(route, categoryService, router) {\n    this.route = route;\n    this.categoryService = categoryService;\n    this.router = router;\n    this.id = '';\n  }\n  ngOnInit() {\n    this.paramSubscription = this.route.paramMap.subscribe({\n      next: params => {\n        this.id = params.get('id');\n        if (this.id) {\n          this.categorySubscription = this.categoryService.getCategoryById(this.id).subscribe({\n            next: res => {\n              this.category = res;\n            },\n            error: err => {\n              console.log(err);\n            }\n          });\n        }\n      }\n    });\n  }\n  ngOnDestroy() {\n    this.paramSubscription?.unsubscribe();\n    this.categorySubscription?.unsubscribe();\n  }\n  onFormSubmit() {\n    const updateCategoryRequest = {\n      name: this.category?.name ?? '',\n      urlHandle: this.category?.urlHandle ?? ''\n    };\n    // pass this object to service\n    if (this.id) {\n      this.editCategorySubscription = this.categoryService.updateCategory(this.id, updateCategoryRequest).subscribe({\n        next: response => {\n          this.router.navigateByUrl('/admin/categories');\n        }\n      });\n    }\n  }\n};\nEditCategoryComponent = __decorate([Component({\n  selector: 'app-edit-category',\n  templateUrl: './edit-category.component.html',\n  styleUrls: ['./edit-category.component.css']\n})], EditCategoryComponent);","map":{"version":3,"names":["Component","EditCategoryComponent","constructor","route","categoryService","router","id","ngOnInit","paramSubscription","paramMap","subscribe","next","params","get","categorySubscription","getCategoryById","res","category","error","err","console","log","ngOnDestroy","unsubscribe","onFormSubmit","updateCategoryRequest","name","urlHandle","editCategorySubscription","updateCategory","response","navigateByUrl","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\projects\\Blog\\UI\\blog\\src\\app\\features\\category\\edit-category\\edit-category.component.ts"],"sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { Category, UpdateCategoryRequest } from '../../models/category.model';\nimport { CategoryService } from 'src/app/service/category.service';\n\n@Component({\n  selector: 'app-edit-category',\n  templateUrl: './edit-category.component.html',\n  styleUrls: ['./edit-category.component.css']\n})\nexport class EditCategoryComponent implements OnInit, OnDestroy {\n\n  id: string | null='';\n  paramSubscription?: Subscription;\n  categorySubscription?: Subscription;\n  editCategorySubscription?: Subscription;\n  category?: Category;\n\n  constructor(private route:ActivatedRoute, private categoryService: CategoryService,\n    private router: ) { }\n\n  ngOnInit() {\n\n    this.paramSubscription = this.route.paramMap.subscribe({\n      next: params =>{\n         this.id = params.get('id');\n         if(this.id) {\n            this.categorySubscription = this.categoryService.getCategoryById(this.id)\n            .subscribe({\n              next: res =>{\n                this.category = res;\n              },error: err =>{\n                console.log(err);\n              }\n            })\n         }\n      }\n    })\n\n  }\n\n  ngOnDestroy(): void {\n      this.paramSubscription?.unsubscribe();\n      this.categorySubscription?.unsubscribe();\n  }\n\n\n  onFormSubmit() {\n    const updateCategoryRequest: UpdateCategoryRequest = {\n      name: this.category?.name ?? '',\n      urlHandle: this.category?.urlHandle ?? ''\n    };\n\n    // pass this object to service\n    if (this.id) {\n      this.editCategorySubscription = this.categoryService.updateCategory(this.id, updateCategoryRequest)\n      .subscribe({\n        next: (response) => {\n          this.router.navigateByUrl('/admin/categories');\n        }\n      });\n    }\n  }\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAA2B,eAAe;AAWrD,WAAMC,qBAAqB,GAA3B,MAAMA,qBAAqB;EAQhCC,YAAoBC,KAAoB,EAAUC,eAAgC,EACxEC,MAAO;IADG,KAAAF,KAAK,GAALA,KAAK;IAAyB,KAAAC,eAAe,GAAfA,eAAe;IACvD,KAAAC,MAAM,GAANA,MAAM;IAPhB,KAAAC,EAAE,GAAgB,EAAE;EAOE;EAEtBC,QAAQA,CAAA;IAEN,IAAI,CAACC,iBAAiB,GAAG,IAAI,CAACL,KAAK,CAACM,QAAQ,CAACC,SAAS,CAAC;MACrDC,IAAI,EAAEC,MAAM,IAAG;QACZ,IAAI,CAACN,EAAE,GAAGM,MAAM,CAACC,GAAG,CAAC,IAAI,CAAC;QAC1B,IAAG,IAAI,CAACP,EAAE,EAAE;UACT,IAAI,CAACQ,oBAAoB,GAAG,IAAI,CAACV,eAAe,CAACW,eAAe,CAAC,IAAI,CAACT,EAAE,CAAC,CACxEI,SAAS,CAAC;YACTC,IAAI,EAAEK,GAAG,IAAG;cACV,IAAI,CAACC,QAAQ,GAAGD,GAAG;YACrB,CAAC;YAACE,KAAK,EAAEC,GAAG,IAAG;cACbC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;YAClB;WACD,CAAC;;MAER;KACD,CAAC;EAEJ;EAEAG,WAAWA,CAAA;IACP,IAAI,CAACd,iBAAiB,EAAEe,WAAW,EAAE;IACrC,IAAI,CAACT,oBAAoB,EAAES,WAAW,EAAE;EAC5C;EAGAC,YAAYA,CAAA;IACV,MAAMC,qBAAqB,GAA0B;MACnDC,IAAI,EAAE,IAAI,CAACT,QAAQ,EAAES,IAAI,IAAI,EAAE;MAC/BC,SAAS,EAAE,IAAI,CAACV,QAAQ,EAAEU,SAAS,IAAI;KACxC;IAED;IACA,IAAI,IAAI,CAACrB,EAAE,EAAE;MACX,IAAI,CAACsB,wBAAwB,GAAG,IAAI,CAACxB,eAAe,CAACyB,cAAc,CAAC,IAAI,CAACvB,EAAE,EAAEmB,qBAAqB,CAAC,CAClGf,SAAS,CAAC;QACTC,IAAI,EAAGmB,QAAQ,IAAI;UACjB,IAAI,CAACzB,MAAM,CAAC0B,aAAa,CAAC,mBAAmB,CAAC;QAChD;OACD,CAAC;;EAEN;CAED;AAtDY9B,qBAAqB,GAAA+B,UAAA,EALjChC,SAAS,CAAC;EACTiC,QAAQ,EAAE,mBAAmB;EAC7BC,WAAW,EAAE,gCAAgC;EAC7CC,SAAS,EAAE,CAAC,+BAA+B;CAC5C,CAAC,C,EACWlC,qBAAqB,CAsDjC"},"metadata":{},"sourceType":"module","externalDependencies":[]}