{"ast":null,"code":"import { environment } from 'src/environments/environment.development';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CategoryService {\n  updateCategory(id, model) {\n    return this.http.put(environment.apiBaseUrl + '/api/categories' + id, model);\n  }\n  constructor(http) {\n    this.http = http;\n  }\n  addCategory(model) {\n    return this.http.post(environment.apiBaseUrl + '/api/categories', model);\n  }\n  getAllCategories() {\n    return this.http.get(environment.apiBaseUrl + '/api/categories');\n  }\n  getCategoryById(id) {\n    return this.http.get(environment.apiBaseUrl + \"/api/categories/\" + id);\n  }\n  static #_ = this.ɵfac = function CategoryService_Factory(t) {\n    return new (t || CategoryService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CategoryService,\n    factory: CategoryService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["environment","CategoryService","updateCategory","id","model","http","put","apiBaseUrl","constructor","addCategory","post","getAllCategories","get","getCategoryById","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["D:\\projects\\Blog\\UI\\blog\\src\\app\\service\\category.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { AddCategoryRequest, Category, UpdateCategoryRequest } from '../features/models/category.model';\nimport {Observable} from 'rxjs'\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment.development';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoryService {\n  updateCategory(id: string, model: UpdateCategoryRequest) {\n    return this.http.put<void>(environment.apiBaseUrl+'/api/categories'+id, model);\n  }\n\n  constructor(private http: HttpClient) { }\n  \n  addCategory(model: AddCategoryRequest) : Observable<void> {\n    return this.http.post<void>(environment.apiBaseUrl+'/api/categories', model);\n  }\n\n  getAllCategories():Observable<Category[]> {\n    return this.http.get<Category[]>( environment.apiBaseUrl+'/api/categories') \n  }\n\n  getCategoryById(id:string):Observable<Category> {\n    return this.http.get<Category>(environment.apiBaseUrl+\"/api/categories/\"+id)\n  }\n\n}\n"],"mappings":"AAIA,SAASA,WAAW,QAAQ,0CAA0C;;;AAKtE,OAAM,MAAOC,eAAe;EAC1BC,cAAcA,CAACC,EAAU,EAAEC,KAA4B;IACrD,OAAO,IAAI,CAACC,IAAI,CAACC,GAAG,CAAON,WAAW,CAACO,UAAU,GAAC,iBAAiB,GAACJ,EAAE,EAAEC,KAAK,CAAC;EAChF;EAEAI,YAAoBH,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EAExCI,WAAWA,CAACL,KAAyB;IACnC,OAAO,IAAI,CAACC,IAAI,CAACK,IAAI,CAAOV,WAAW,CAACO,UAAU,GAAC,iBAAiB,EAAEH,KAAK,CAAC;EAC9E;EAEAO,gBAAgBA,CAAA;IACd,OAAO,IAAI,CAACN,IAAI,CAACO,GAAG,CAAcZ,WAAW,CAACO,UAAU,GAAC,iBAAiB,CAAC;EAC7E;EAEAM,eAAeA,CAACV,EAAS;IACvB,OAAO,IAAI,CAACE,IAAI,CAACO,GAAG,CAAWZ,WAAW,CAACO,UAAU,GAAC,kBAAkB,GAACJ,EAAE,CAAC;EAC9E;EAAC,QAAAW,CAAA,G;qBAjBUb,eAAe,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAflB,eAAe;IAAAmB,OAAA,EAAfnB,eAAe,CAAAoB,IAAA;IAAAC,UAAA,EAFd;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}